{"version":3,"sources":["store/index.js","store/actions.js","store/selectors.js","components/restaurantCard/restaurantCard.js","components/restaurantsList/restaurantsList.js","API/uber_eats_api.js","icons.js","components/header/header.js","App.js","index.js"],"names":["initialState","restaurants","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread2","applyMiddleware","thunk","selectRastaurantsList","createSelector","_ref","feedItems","storesMap","map","_ref2","uuid","RestaurantCard","categories","heroImageUrl","title","etaRange","react_default","a","createElement","className","src","alt","concat","join","replace","mapDispatch2Props","loadData","dispatch","fetch","then","response","json","catch","data","connect","useEffect","Fragment","restaurant","restaurantCard","text","logo","width","height","viewBox","fill","xmlns","d","iconAddress","fillRule","clipRule","stroke","iconSearch","strokeWidth","Header","placeholder","App","header_header","restaurantsList","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c971b7cb.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { LOAD_SUCCESS } from './actions';\n\nconst initialState = {\n  restaurants: null,\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_SUCCESS:\n      return {\n        ...state,\n        restaurants: action.restaurants,\n      };\n    default: return state;\n  }\n};\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import { getRestaurants } from '../API/uber_eats_api';\n\nexport const LOAD_SUCCESS = 'LOAD_SUCCESS';\n\nconst loadRestaurantsSuccess = restaurants => ({\n  type: 'LOAD_SUCCESS', restaurants,\n});\n\nexport const loadRestaurants = () => (dispatch) => {\n  getRestaurants()\n    .then(({ data }) => dispatch(loadRestaurantsSuccess(data)));\n};\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectRastaurantsList = createSelector(\n  rootSelector,\n  ({ restaurants }) => {\n    if (!restaurants) {\n      return [];\n    }\n\n    const { feedItems, storesMap } = restaurants;\n\n    return feedItems.map(({ uuid }) => storesMap[uuid]);\n  },\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RestaurantCard\n  = ({ categories, heroImageUrl, title, uuid, etaRange }) => (\n    <section className=\"restaurant_card\">\n      <img\n        className=\"restaurant_card__image\"\n        src={heroImageUrl}\n        alt={`restaurant_${title}`}\n      />\n      <h2\n        className=\"restaurant_card__header\"\n      >\n        {title}\n      </h2>\n      <p\n        className=\"restaurant_card__categories\"\n      >\n        {`${categories.join(` • `)}`}\n      </p>\n      <p\n        className=\"restaurant_card__time\"\n      >\n        {etaRange.replace(/–/, ' - ')}\n      </p>\n    </section>\n  );\n\nRestaurantCard.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n  heroImageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  uuid: PropTypes.string.isRequired,\n  etaRange: PropTypes.string.isRequired,\n};\n\nexport default RestaurantCard;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadRestaurants } from '../../store/actions';\nimport { selectRastaurantsList } from '../../store/selectors';\nimport RestaurantCard from '../restaurantCard/restaurantCard';\n\n// categories, heroImageUrl, title, uuid, etaRange.text\n\nconst RestaurantsList = ({ loadData, restaurants }) => {\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <>\n      {restaurants.map((restaurant) => {\n        const {\n          categories,\n          heroImageUrl,\n          title,\n          uuid,\n          etaRange,\n        } = restaurant;\n\n        return (\n          <RestaurantCard\n            categories={categories}\n            heroImageUrl={heroImageUrl}\n            title={title}\n            uuid={uuid}\n            etaRange={etaRange.text}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst mapState2Props = state => ({\n  restaurants: selectRastaurantsList(state),\n});\n\nconst mapDispatch2Props = ({\n  loadData: loadRestaurants,\n});\n\nRestaurantsList.propTypes = {\n  loadData: PropTypes.func.isRequired,\n  restaurants: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string, PropTypes.bool], PropTypes.object)).isRequired,\n};\n\nexport default connect(mapState2Props, mapDispatch2Props)(RestaurantsList);\n","// eslint-disable-next-line max-len\nexport const getRestaurants = () => fetch('https://mate-uber-eats-api.herokuapp.com/api/v1/restaurants')\n  .then(response => response.json())\n  .catch(() => 'Something wrong');\n","import React from 'react';\n\nexport const logo = (\n  <svg\n    width=\"145\"\n    height=\"24\"\n    viewBox=\"0 0 145 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    {/* eslint-disable-next-line max-len */}\n    <path d=\"M66.8341 9.17115C64.682 9.17115 63.1554 10.8551 63.1554 13.44V22.922H59.8702V6.23213H63.1161V8.27016C63.5164 7.59468 64.0902 7.03857 64.7778 6.65947C65.4655 6.28037 66.242 6.09207 67.0269 6.1141H68.2072V9.17115H66.8341ZM57.6 14.5771C57.6 9.6 54.059 5.87803 49.2669 5.87803C48.1346 5.88572 47.0151 6.11721 45.9726 6.55919C44.9301 7.00117 43.9854 7.64491 43.1926 8.45338C42.3999 9.26185 41.7748 10.2191 41.3534 11.27C40.932 12.321 40.7225 13.4449 40.737 14.5771C40.737 19.5502 44.5731 23.3115 49.5777 23.3115C50.9757 23.3379 52.3595 23.0278 53.6125 22.4075C54.8656 21.7871 55.9511 20.8746 56.7777 19.7469L54.3934 18C53.8464 18.7634 53.1227 19.383 52.284 19.8058C51.4453 20.2285 50.5168 20.4419 49.5777 20.4275C48.2402 20.4212 46.9493 19.936 45.9388 19.0597C44.9283 18.1835 44.2651 16.9743 44.0695 15.6511H57.6079L57.6 14.5771ZM44.1403 13.0466C44.7266 10.501 46.7607 8.7777 49.2275 8.7777C51.6944 8.7777 53.7246 10.501 54.2754 13.0466H44.1403ZM30.3305 5.87803C29.2326 5.87896 28.1458 6.09744 27.1328 6.52086C26.1198 6.94428 25.2008 7.56424 24.4289 8.34492V0H21.1436V22.922H24.3895V20.8052C25.962 22.396 28.1016 23.2974 30.3384 23.3115C31.4986 23.3361 32.6522 23.1289 33.7313 22.7019C34.8104 22.2749 35.7935 21.6368 36.6228 20.8249C37.4521 20.0131 38.1109 19.0438 38.5607 17.974C39.0106 16.9042 39.2423 15.7553 39.2423 14.5948C39.2423 13.4342 39.0106 12.2854 38.5607 11.2155C38.1109 10.1457 37.4521 9.17644 36.6228 8.36458C35.7935 7.55271 34.8104 6.91458 33.7313 6.4876C32.6522 6.06062 31.4986 5.85338 30.3384 5.87803H30.3305ZM30.0944 20.3764C28.9493 20.3818 27.8284 20.047 26.8739 19.4144C25.9194 18.7818 25.1743 17.8798 24.7332 16.8231C24.2921 15.7663 24.1749 14.6024 24.3964 13.4789C24.6179 12.3554 25.1681 11.323 25.9773 10.5127C26.7864 9.70246 27.8181 9.15082 28.9413 8.92779C30.0644 8.70477 31.2286 8.82042 32.2859 9.26007C33.3433 9.69972 34.2462 10.4435 34.8801 11.3972C35.5141 12.3508 35.8504 13.4713 35.8466 14.6164C35.8476 15.3717 35.6995 16.1198 35.4107 16.8177C35.1219 17.5156 34.6981 18.1496 34.1636 18.6833C33.6292 19.217 32.9946 19.6399 32.2963 19.9278C31.598 20.2156 30.8497 20.3627 30.0944 20.3607V20.3764ZM9.04525 20.219C12.2164 20.219 14.6793 17.7875 14.6793 14.1443V0H18.0826V22.922H14.7187V20.7541C13.9328 21.5664 12.9902 22.2107 11.9481 22.6483C10.906 23.0858 9.78596 23.3074 8.65574 23.2997C3.76525 23.2997 0 19.7351 0 14.3292V0H3.46623V14.1639C3.46623 17.8269 5.82689 20.219 9.04525 20.219Z\" fill=\"#262626\" />\n    {/* eslint-disable-next-line max-len */}\n    <path d=\"M76.3789 0H92.4589V3.93443H80.7225V9.52131H92.1323V13.322H80.7225V19.0033H92.4589V22.9377H76.3789V0ZM136.867 23.3508C141.797 23.3508 144.574 20.9902 144.574 17.7482C144.574 15.4387 142.93 13.7154 139.487 12.9679L135.848 12.2243C133.735 11.8308 133.07 11.4374 133.07 10.6505C133.07 9.63148 134.089 9.0059 135.966 9.0059C138 9.0059 139.507 9.55279 139.9 11.4334H144.165C143.933 7.89246 141.387 5.55541 136.225 5.55541C131.764 5.55541 128.632 7.39672 128.632 10.9652C128.632 13.4321 130.355 15.0374 134.073 15.8203L138.142 16.7607C139.747 17.0754 140.176 17.5082 140.176 18.1731C140.176 19.2315 138.964 19.8964 137.004 19.8964C134.542 19.8964 133.133 19.3495 132.586 17.4689H128.298C128.923 21.002 131.543 23.3508 136.867 23.3508ZM127.058 22.922H122.443C119.547 22.922 117.942 21.12 117.942 18.8459V9.83607H114.696V5.99606H117.958V1.17639H122.246V5.99606H127.058V9.83607H122.246V17.7482C122.246 18.6492 122.872 19.082 123.852 19.082H127.058V22.922ZM108.566 6.00394V7.53049C107.057 6.25411 105.142 5.55677 103.164 5.56328C101.981 5.53838 100.804 5.75002 99.7032 6.18579C98.6024 6.62156 97.5996 7.27269 96.7537 8.10102C95.9077 8.92935 95.2357 9.91821 94.7768 11.0096C94.318 12.1011 94.0817 13.2731 94.0817 14.4571C94.0817 15.641 94.318 16.813 94.7768 17.9045C95.2357 18.9959 95.9077 19.9848 96.7537 20.8131C97.5996 21.6414 98.6024 22.2925 99.7032 22.7283C100.804 23.1641 101.981 23.3757 103.164 23.3508C105.142 23.3594 107.058 22.6618 108.566 21.3836V22.9141H112.843V5.99606L108.566 6.00394ZM103.519 19.6367C102.493 19.6484 101.487 19.3549 100.628 18.7933C99.7692 18.2318 99.0969 17.4277 98.6964 16.4832C98.2958 15.5387 98.1852 14.4964 98.3784 13.4888C98.5716 12.4812 99.0601 11.5539 99.7816 10.8245C100.503 10.0952 101.425 9.59686 102.431 9.39285C103.436 9.18883 104.48 9.28834 105.428 9.67875C106.377 10.0691 107.188 10.7328 107.759 11.5854C108.33 12.438 108.634 13.4409 108.633 14.4669C108.64 15.1432 108.512 15.814 108.257 16.4405C108.002 17.0671 107.626 17.6369 107.149 18.1169C106.673 18.597 106.106 18.9778 105.481 19.2373C104.857 19.4968 104.187 19.6299 103.511 19.6289L103.519 19.6367Z\" fill=\"#5FB709\" />\n  </svg>\n);\nexport const iconAddress = (\n  <svg\n    width=\"14\"\n    height=\"17\"\n    viewBox=\"0 0 14 17\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    {/* eslint-disable-next-line max-len */}\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7 15.7859L11.2392 11.4636C13.5869 9.06988 13.5869 5.18495 11.2392 2.79123C8.89684 0.402923 5.10316 0.402923 2.76077 2.79123C0.413075 5.18495 0.413075 9.06988 2.76077 11.4636L7 15.7859Z\" stroke=\"#262626\" />\n    {/* eslint-disable-next-line max-len */}\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7 9C8.10457 9 9 8.10457 9 7C9 5.89543 8.10457 5 7 5C5.89543 5 5 5.89543 5 7C5 8.10457 5.89543 9 7 9Z\" stroke=\"#262626\" />\n  </svg>\n);\n\nexport const iconSearch = (\n  // eslint-disable-next-line max-len\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    {/* eslint-disable-next-line max-len */}\n    <path d=\"M10.9217 11.0417L15 15M12.8788 6.76471C12.8788 9.94847 10.2196 12.5294 6.93939 12.5294C3.65916 12.5294 1 9.94847 1 6.76471C1 3.58095 3.65916 1 6.93939 1C10.2196 1 12.8788 3.58095 12.8788 6.76471Z\" stroke=\"black\" strokeWidth=\"2\" />\n  </svg>\n);\n","import React from 'react';\nimport './header.scss';\nimport { logo, iconAddress, iconSearch } from '../../icons';\n\nconst Header = () => (\n  <div className=\"header__search search\">\n    <h1>\n      {logo}\n    </h1>\n    <div\n      className=\"search__query_address\"\n    >\n      {iconAddress}\n      <input\n        type=\"text\"\n        className=\"search__input\"\n        placeholder=\"Address\"\n      />\n    </div>\n\n    <div className=\"search__delivery_time \">\n      <input\n        className=\"search__input\"\n        type=\"time\"\n      />\n    </div>\n\n    <div\n      className=\"search__query_dish\"\n    >\n      {iconSearch}\n      <input\n        type=\"text\"\n        className=\"search__input\"\n        placeholder=\"Search\"\n      />\n    </div>\n    <div\n      className=\"search__sign_in\"\n    >\n      Sign in\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport './App.scss';\nimport RestaurantsList from './components/restaurantsList/restaurantsList';\nimport Header from './components/header/header';\n\nconst App = () => (\n\n  <div className=\"app\">\n    <header className=\"header app__header\">\n      <Header />\n    </header>\n    <main className=\"restaurants_list app__restaurants_list\">\n      <RestaurantsList />\n    </main>\n    <footer>\n        footer\n    </footer>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/index';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}